Комментарии по модели
1. Модель строилась при помощи CatBoostRegressor, в самой модели закомментированы аргументы, которые изменялись, но их изменение не привело ни к каким результатам
2. Модель состоит только из одного дерева (пробовала менять различные параметры, но точка переобучения на графике не сдвигалась, оставалось только одно дерево)
3. Параметры алгоритма, которые оказали более-менее существенное влияние на результат:
* depth - глубина дерева, при увеличении уменьшаются значения метрик, но увеличивается ошибка из-за переобучения при добавлении новых деревьев в ансамлбль
* border_count=251 - подобран параметр, чтобы результаты были чуть лучше
* learning_rate = 1 - подобран такой шаг (мне кажется слишком большим, но почему-то работает)
* od_wait=20 - ограничение количества деревьев после переобучения, чтобы долго не ждать
* loss_function='MAE' - RMSE очень плохо работает
* use_best_model=True - используем лучшую по валидационным данным модель 
4. Проверялись сразу две метрики: MAPE (среднее модулей разности) и MAPE median (медиана модулей разности):
depth=6
MAPE median = 0.016475081305314387
MAPE = 0.023968094686153536 

depth=12
MAPE median = 0.008609445652022235
MAPE = 0.019882362296886422

5. Также была сделана попытка обучить различные модели (игнорировались те или иные фичи) и взять среднее значение предсказаний, но значимого результата это не дало

Комментарии по сервису
1. model.py - функция для обучения модели
2. testController.py - файл с использованием flask для обработки post-запросов
3. requirments.txt - туда записались все зависимости для окружения в Anaconda, вообще говоря, нужно меньше, но пока быстро не получилось сделать файл для конкретного проекта
4. Работа сервиса проверялась только на локальном хосте (запросы делались при помощи Postmsn, передавались файлы ds1.csv для обучения модели и X_test.csv для получения предсказанных значений)